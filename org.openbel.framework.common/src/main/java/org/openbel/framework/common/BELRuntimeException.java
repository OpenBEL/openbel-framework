/**
 *  Copyright 2013 OpenBEL Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.openbel.framework.common;

import org.openbel.framework.common.enums.ExitCode;

/**
 * BEL unchecked runtime exception generated by the BEL Framework.
 * <p>
 * These exceptions require user-facing messages and exit codes to aid in
 * problem reporting.
 * </p>
 *
 * @see UserFacingUncheckedException
 * @see BELUncheckedException
 */
public class BELRuntimeException extends UserFacingUncheckedException {
    private static final long serialVersionUID = -7019576588999656112L;
    private final ExitCode exitCode;

    /**
     * Creates a BEL runtime exception with the specified detail message and
     * exit code. The cause is not initialized, and may subsequently be
     * initialized by a call to {@link #initCause(Throwable)}.
     *
     * @param msg The detailed exception message
     * @param exitCode Exit code
     * @throws InvalidArgument Thrown if {@code exitCode} is null
     */
    public BELRuntimeException(String msg, ExitCode exitCode) {
        super(msg);
        if (exitCode == null) {
            throw new InvalidArgument("exitCode", exitCode);
        }
        this.exitCode = exitCode;
    }

    /**
     * Creates a BEL runtime exception with the specified detail message, exit
     * code, and cause.
     *
     * @param msg The detailed exception message
     * @param cause The {@link Throwable cause} of the exception
     * @see Throwable#getMessage() getMessage
     * @see Throwable#getCause() getCause
     * @throws InvalidArgument Thrown if {@code exitCode} is null
     */
    public BELRuntimeException(String msg, ExitCode exitCode, Throwable cause) {
        super(msg, cause);
        if (exitCode == null) {
            throw new InvalidArgument("exitCode", exitCode);
        }
        this.exitCode = exitCode;
    }

    /**
     * Returns the BEL runtime exception's exit code.
     *
     * @return {@link ExitCode}
     */
    public final ExitCode getExitCode() {
        return exitCode;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getUserFacingMessage() {
        final StringBuilder bldr = new StringBuilder();

        bldr.append("ERROR ");
        bldr.append(exitCode);
        bldr.append("\n");

        String msg = getMessage();
        if (msg != null) {
            bldr.append(msg);
        }

        final Throwable cause = getCause();
        if (cause != null) {
            bldr.append("\nCaused by: ");
            msg = cause.getMessage();
            if (msg != null) {
                bldr.append(msg);
            }
            StackTraceElement[] stack = cause.getStackTrace();
            for (final StackTraceElement ste : stack) {
                bldr.append("\n\t");
                bldr.append(ste);
            }
            bldr.append("\n");
        }

        return bldr.toString();
    }

}
