/**
 *  Copyright 2013 OpenBEL Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.openbel.framework.common;

/**
 * BEL base class for unchecked exceptions generated by the framework. BEL
 * runtime exceptions are used when recovery is generally not possible. These
 * exceptions are intended to allow some higher-level of the OpenBEL Framework API
 * to catch them and provide useful information beyond a stack trace.
 * <p>
 * BEL unchecked exceptions require the presence of a
 * {@link java.lang.Exception#getMessage() message}.
 * </p>
 * <p>
 * For further reference, see <i>Effective Java, 2nd Edition; Chapter 9.
 * Exceptions</i>.
 * </p>
 */
public abstract class BELUncheckedException extends RuntimeException {
    private static final long serialVersionUID = -2963551867668856220L;

    /**
     * Creates a user-facing unchecked exception with the provided detail
     * message. The cause is not initialized, and may subsequently be
     * initialized by a call to {@link #initCause(Throwable)}.
     *
     * @param msg The detailed exception message
     * @see #initCause(Throwable)
     */
    public BELUncheckedException(String msg) {
        super(msg);
    }

    /**
     * Creates a user-facing unchecked exception with the provided detail
     * message and cause.
     *
     * @param msg The detailed exception message
     * @param cause The cause of the exception
     * @see Throwable#getMessage() getMessage
     * @see Throwable#getCause() getCause
     */
    public BELUncheckedException(String msg, Throwable cause) {
        super(msg, cause);
    }

}
