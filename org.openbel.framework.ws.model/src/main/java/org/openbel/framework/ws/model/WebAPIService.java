/**
 *  Copyright 2013 OpenBEL Consortium
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.openbel.framework.ws.model;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 *
 */
@WebServiceClient(name = "WebAPIService", targetNamespace = "http://belframework.org/ws/schemas", wsdlLocation = "http://localhost:8080/openbel-ws/belframework.wsdl")
public class WebAPIService extends Service {

    private final static URL WEBAPISERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger
            .getLogger(org.openbel.framework.ws.model.WebAPIService.class
                    .getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.openbel.framework.ws.model.WebAPIService.class
                    .getResource(".");
            url =
                    new URL(baseUrl,
                            "http://localhost:8080/openbel-ws/belframework.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:8080/openbel-ws/belframework.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        WEBAPISERVICE_WSDL_LOCATION = url;
    }

    public WebAPIService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebAPIService() {
        super(WEBAPISERVICE_WSDL_LOCATION, new QName(
                "http://belframework.org/ws/schemas", "WebAPIService"));
    }

    /**
     *
     * @return returns WebAPI
     */
    @WebEndpoint(name = "WebAPISoap11")
    public WebAPI getWebAPISoap11() {
        return super.getPort(new QName("http://belframework.org/ws/schemas",
                "WebAPISoap11"), WebAPI.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     *            configure on the proxy. Supported features not in the
     *            <code>features</code> parameter will have their default
     *            values.
     * @return returns WebAPI
     */
    @WebEndpoint(name = "WebAPISoap11")
    public WebAPI getWebAPISoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://belframework.org/ws/schemas",
                "WebAPISoap11"), WebAPI.class, features);
    }

}
